# Azure Pipeline for Databricks CI/CD
#
# Build and releases the Databricks data and ML code. 
# 
# Build:
# * Runs unit and integration tests for handling requests
# * Build a virtual environment and archive for deployment.
# Releases:
# * Deploys ...
# 


trigger:
  branches:
    include:
    - refs/heads/main
  paths:
    include:
    - value-at-risk/*
    - cicd/value-at-risk/*

pr:
  branches:
    include:
    - main
  paths:
    include:
    - value-at-risk/*
    - cicd/value-at-risk/*

variables:
- name: productionReady
  value: false
- name: buildArtifactPath
  value:  'cicd/value-at-risk'
- name: pipelineArtifactName
  value:  'databricks-dev-build'
- group: mlops-dev

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - template: build.yml

- stage: ReleaseDEV
  displayName: DEV Release
  variables:
  - name: dockerRegistry
    value:  'mlops-acr'
  condition: eq('${{ variables.productionReady }}', false)
  jobs:
  - template: release.yml
    parameters:
      environment: dev

- stage: ReleaseINT
  displayName: INT Release
  condition: eq('${{ variables.productionReady }}', true)
  jobs:
  - template: release.yml
    parameters:
      environment: int
 
- stage: ReleasePRD
  displayName: PRD Release
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/main'), eq('${{ variables.productionReady }}', true))
  jobs:
  - template: release.yml
    parameters:
      environment: prd